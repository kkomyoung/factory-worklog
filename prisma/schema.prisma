// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// 사용자 정보
model User {
  id           String  @id @default(cuid())
  loginId      String  @unique // 로그인용 ID (사번)
  password     String
  name         String
  role         Role    @default(WORKER)

  // 역할별 전용 컬럼
  licensePhoto String?

  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  workLogs   WorkLog[]

  @@index([role])
  @@map("users")
}

enum Role {
  ADMIN
  WORKER
}


// 작업 라인
model Line {
  id        String    @id @default(cuid())
  name      String
  order     Int
  processes Process[]
  createdAt DateTime  @default(now())
}
// 작업 공정
model Process {
  id        String   @id @default(cuid())
  name      String
  order     Int
  lineId    String
  line      Line     @relation(fields: [lineId], references: [id])

  workLogs  WorkLog[]
  createdAt DateTime  @default(now())
}

// 작업 기록
model WorkLog {
  id        String   @id @default(cuid())
  userId    String // User.id 를 참조
  processId String
  startedAt DateTime @default(now())
  endedAt   DateTime?

  user    User    @relation(fields: [userId], references: [id])
  process Process @relation(fields: [processId], references: [id])

  @@index([userId])
  @@index([processId])
  @@index([startedAt])
}